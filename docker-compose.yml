version: '2'

networks:
  basic:

services:
  ca.example.com:
    image: hyperledger/fabric-ca
    restart: always
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.example.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/priv_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      # Cryptography configuration is mapped to be able to generate keys from CA
      - ./crypto-config/:/etc/hyperledger/crypto-config
    container_name: ca.example.com
    networks:
      - basic

  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:1.4
    restart: always
    environment:
      - FABRIC_LOGGING_SPEC=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=Org1MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/users/Admin@org1.example.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
      - ./config/:/etc/hyperledger/configtx
      - ./crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
    networks:
      - basic
    depends_on:
      - ca.example.com

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:1.4
    restart: always
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.example.com
      - FABRIC_LOGGING_SPEC=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com/msp
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    # command: peer node start
    command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7052:7052
      - 7053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
      - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - ca.example.com
      - couchdb
    networks:
      - basic

  couchdb:
    container_name: couchdb
    image: hyperledger/fabric-couchdb
    restart: always
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - basic

  installer:
    container_name: installer
    image: vitche/hyperledger-chaincode-installer
    restart: always
    environment:
      - GOPATH=/applications/hyperledger-chaincode-installer
      - PORT=7001
    volumes:
      - ./chaincodes/sample:/applications/hyperledger-chaincode-installer/chaincodes/sample
      - ./chaincodes/shell-linux:/applications/hyperledger-chaincode-installer/chaincodes/shell-linux
      - ./chaincodes/shell-raspberry:/applications/hyperledger-chaincode-installer/chaincodes/shell-raspberry
      - ./crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp:/applications/hyperledger-chaincode-installer/networks/Org1MSP/msp
      - ./connection.yaml:/applications/hyperledger-chaincode-installer/networks/Org1MSP/connection.yaml
    networks:
      - basic
    ports:
      - 7001:7001
    depends_on:
      - orderer.example.com
      - peer0.org1.example.com
      - couchdb
      - ca.example.com

  gateway:
    container_name: gateway
    image: vitche/hyperledger-chaincode-gateway
    restart: always
    environment:
      - PORT=7002
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp:/applications/hyperledger-chaincode-gateway/networks/Org1MSP/msp
      - ./connection.yaml:/applications/hyperledger-chaincode-gateway/networks/Org1MSP/connection.yaml
    networks:
      - basic
    ports:
      - 7002:7002
    depends_on:
      - orderer.example.com
      - peer0.org1.example.com
      - couchdb
      - ca.example.com

  scheduler:
    container_name: scheduler
    image: vitche/hyperledger-chaincode-scheduler
    restart: always
    environment:
      - PORT=7003
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp:/applications/hyperledger-chaincode-scheduler/networks/Org1MSP/msp
      - ./connection.yaml:/applications/hyperledger-chaincode-scheduler/networks/Org1MSP/connection.yaml
    networks:
      - basic
    ports:
      - 7003:7003
    depends_on:
      - orderer.example.com
      - peer0.org1.example.com
      - couchdb
      - ca.example.com

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:1.4
    tty: true
    restart: always
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=debug
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/chaincodes
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./chaincodes/:/opt/gopath/src/github.com/chaincodes
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
    networks:
      - basic
    depends_on:
      - orderer.example.com
      - ca.example.com
      - peer0.org1.example.com
      - couchdb

  ide:
    container_name: ide
    image: vitche/python-notebook-hysh
    ports:
      - 8888:8888
    tty: true
    restart: always
    networks:
      - basic
